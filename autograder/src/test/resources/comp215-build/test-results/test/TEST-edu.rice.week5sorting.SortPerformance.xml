<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ AnnoAutoGrader
  ~ Copyright (c) 2019, Dan S. Wallach, Rice University
  ~ Available subject to the Apache 2.0 License
  -->

<testsuite name="edu.rice.week5sorting.SortPerformance" tests="3" skipped="0" failures="0" errors="0" timestamp="2019-03-29T14:20:40" hostname="bunsen-honeydew.cs.rice.edu" time="0.924">
  <properties/>
  <testcase name="testVavrSort()" classname="edu.rice.week5sorting.SortPerformance" time="0.173"/>
  <testcase name="testHeapSortLazy()" classname="edu.rice.week5sorting.SortPerformance" time="0.376"/>
  <testcase name="testHeapSortEager()" classname="edu.rice.week5sorting.SortPerformance" time="0.374"/>
  <system-out><![CDATA[2019-03-29 09:20:40,097 [Test worker] ?[34mINFO ?[0;39m ?[36mSortPerformance?[0;39m - Computing seq test sequence, size =    10000 
2019-03-29 09:20:40,124 [Test worker] ?[34mINFO ?[0;39m ?[36mSortPerformance?[0;39m - Computing seq test sequence, size =    40000 
2019-03-29 09:20:40,221 [Test worker] ?[34mINFO ?[0;39m ?[36mSortPerformance?[0;39m - Computing seq test sequence, size =   160000 
================== testing Timsort          ==================
Sort time:        0.378 µs / element with    10000 elements
Sort time:        0.409 µs / element with    40000 elements
Sort time:        0.622 µs / element with   160000 elements
================== testing Heapsort (lazy)  ==================
Sort time:        0.124 µs / element with    10000 elements
Sort time:        0.115 µs / element with    40000 elements
Sort time:        0.140 µs / element with   160000 elements
================== testing Heapsort (eager) ==================
Sort time:        0.760 µs / element with    10000 elements
Sort time:        0.920 µs / element with    40000 elements
Sort time:        1.678 µs / element with   160000 elements
]]></system-out>
  <system-err><![CDATA[]]></system-err>
</testsuite>
